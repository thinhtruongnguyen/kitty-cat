/**
 * AIOZ-AI-PLATFORM API
 * API for AIOZ AI Platform
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@swagger.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import http from 'http';
import { RequestDistributeTaskRequest } from '../model/requestDistributeTaskRequest';
import { RequestGetApiKeyStatisticsByModelIdRequest } from '../model/requestGetApiKeyStatisticsByModelIdRequest';
import { ResponseApiKeyHistoryListResponse } from '../model/responseApiKeyHistoryListResponse';
import { ResponseDistributeTaskResponse } from '../model/responseDistributeTaskResponse';
import { ResponseGetApiKeyPermissionResponse } from '../model/responseGetApiKeyPermissionResponse';
import { ResponseGetTaskResultResponse } from '../model/responseGetTaskResultResponse';
import { ResponseGetTaskStatisticsResponse } from '../model/responseGetTaskStatisticsResponse';
import { ResponseSuccessResponse } from '../model/responseSuccessResponse';
import { ResponseWalletWithAddressResponse } from '../model/responseWalletWithAddressResponse';
import { Authentication, Interceptor } from '../model/models';
import { ApiKeyAuth } from '../model/models';
export declare enum ApiKeyApiApiKeys {
    BearerAuth = 0
}
export declare class ApiKeyApi {
    protected _basePath: string;
    protected _defaultHeaders: any;
    protected _useQuerystring: boolean;
    protected authentications: {
        default: Authentication;
        BearerAuth: ApiKeyAuth;
    };
    protected interceptors: Interceptor[];
    constructor(basePath?: string);
    set useQuerystring(value: boolean);
    set basePath(basePath: string);
    set defaultHeaders(defaultHeaders: any);
    get defaultHeaders(): any;
    get basePath(): string;
    setDefaultAuthentication(auth: Authentication): void;
    setApiKey(key: ApiKeyApiApiKeys, value: string): void;
    addInterceptor(interceptor: Interceptor): void;
    /**
     *
     * @summary Get Api Key Balance
     * @param xApiKey api-key
     */
    apiKeyBalanceGet(xApiKey?: string, options?: {
        headers: {
            [name: string]: string;
        };
    }): Promise<{
        response: http.IncomingMessage;
        body: ResponseWalletWithAddressResponse;
    }>;
    /**
     *
     * @summary Get Api Key Permission
     * @param xApiKey api-key
     */
    apiKeyPermissionGet(xApiKey?: string, options?: {
        headers: {
            [name: string]: string;
        };
    }): Promise<{
        response: http.IncomingMessage;
        body: ResponseGetApiKeyPermissionResponse;
    }>;
    /**
     *
     * @summary Get Api Key Statistics
     * @param input Get Api Key Statistics Request
     * @param xApiKey api-key
     */
    apiKeyStatisticsPost(input: RequestGetApiKeyStatisticsByModelIdRequest, xApiKey?: string, options?: {
        headers: {
            [name: string]: string;
        };
    }): Promise<{
        response: http.IncomingMessage;
        body: ResponseGetTaskStatisticsResponse;
    }>;
    /**
     *
     * @summary Get Tasks Histories
     * @param xApiKey api-key
     * @param limit
     * @param offset
     */
    apiKeyTaskHistoriesGet(xApiKey?: string, limit?: number, offset?: number, options?: {
        headers: {
            [name: string]: string;
        };
    }): Promise<{
        response: http.IncomingMessage;
        body: ResponseApiKeyHistoryListResponse;
    }>;
    /**
     *
     * @summary Cancel Task By Api Key
     * @param id Task\&#39;s id
     * @param xApiKey api-key
     */
    apiKeyTaskIdCancelDelete(id: string, xApiKey?: string, options?: {
        headers: {
            [name: string]: string;
        };
    }): Promise<{
        response: http.IncomingMessage;
        body: ResponseSuccessResponse;
    }>;
    /**
     *
     * @summary Get Task Result
     * @param id Task\&#39;s id
     * @param xApiKey api-key
     */
    apiKeyTaskIdResultGet(id: string, xApiKey?: string, options?: {
        headers: {
            [name: string]: string;
        };
    }): Promise<{
        response: http.IncomingMessage;
        body: ResponseGetTaskResultResponse;
    }>;
    /**
     *
     * @summary Distribute Task (Api-Key)
     * @param input Distribute Task Request
     * @param xApiKey api-key
     */
    apiKeyTaskPost(input: RequestDistributeTaskRequest, xApiKey?: string, options?: {
        headers: {
            [name: string]: string;
        };
    }): Promise<{
        response: http.IncomingMessage;
        body: ResponseDistributeTaskResponse;
    }>;
}
