/**
 * AIOZ-AI-PLATFORM API
 * API for AIOZ AI Platform
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@swagger.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import http from 'http';
import { ResponseGetListModelVersioningLiteResponse } from '../model/responseGetListModelVersioningLiteResponse';
import { ResponseModelVersioningGroupLiteResponse } from '../model/responseModelVersioningGroupLiteResponse';
import { ResponseSuccessResponse } from '../model/responseSuccessResponse';
import { Authentication, Interceptor } from '../model/models';
import { ApiKeyAuth } from '../model/models';
export declare enum ApiKeyModelVersioningApiApiKeys {
    BearerAuth = 0
}
export declare class ApiKeyModelVersioningApi {
    protected _basePath: string;
    protected _defaultHeaders: any;
    protected _useQuerystring: boolean;
    protected authentications: {
        default: Authentication;
        BearerAuth: ApiKeyAuth;
    };
    protected interceptors: Interceptor[];
    constructor(basePath?: string);
    set useQuerystring(value: boolean);
    set basePath(basePath: string);
    set defaultHeaders(defaultHeaders: any);
    get defaultHeaders(): any;
    get basePath(): string;
    setDefaultAuthentication(auth: Authentication): void;
    setApiKey(key: ApiKeyModelVersioningApiApiKeys, value: string): void;
    addInterceptor(interceptor: Interceptor): void;
    /**
     *
     * @summary Delete Model Versioning By Commit Hash By Api Key
     * @param id Model\&#39;s id
     * @param commitHash
     * @param xApiKey api-key
     */
    apiKeyModelIdVersioningDelete(id: string, commitHash: string, xApiKey?: string, options?: {
        headers: {
            [name: string]: string;
        };
    }): Promise<{
        response: http.IncomingMessage;
        body: ResponseSuccessResponse;
    }>;
    /**
     *
     * @summary Get Current Model Versioning By Model Id By ApiKey
     * @param id Model\&#39;s id
     * @param xApiKey api-key
     */
    apiKeyModelIdVersioningGet(id: string, xApiKey?: string, options?: {
        headers: {
            [name: string]: string;
        };
    }): Promise<{
        response: http.IncomingMessage;
        body: ResponseModelVersioningGroupLiteResponse;
    }>;
    /**
     * verifyStatus is verified or all. Use verified to get verified versioning. Use all to get verified history
     * @summary Get Verified List Model Versioning By Api Key
     * @param id Model\&#39;s id
     * @param xApiKey api-key
     * @param limit
     * @param offset
     * @param verifyStatus
     */
    apiKeyModelIdVersioningListGet(id: string, xApiKey?: string, limit?: number, offset?: number, verifyStatus?: 'verified' | 'all', options?: {
        headers: {
            [name: string]: string;
        };
    }): Promise<{
        response: http.IncomingMessage;
        body: ResponseGetListModelVersioningLiteResponse;
    }>;
    /**
     *
     * @summary Change Model Versioning By Commit Hash By Api Key
     * @param id Model\&#39;s id
     * @param commitHash
     * @param xApiKey api-key
     */
    apiKeyModelIdVersioningPut(id: string, commitHash: string, xApiKey?: string, options?: {
        headers: {
            [name: string]: string;
        };
    }): Promise<{
        response: http.IncomingMessage;
        body: ResponseSuccessResponse;
    }>;
}
