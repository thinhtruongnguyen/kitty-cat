/**
 * AIOZ-AI-PLATFORM API
 * API for AIOZ AI Platform
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@swagger.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import http from 'http';
import { RequestGetApiKeyStatisticsByModelIdRequest } from '../model/requestGetApiKeyStatisticsByModelIdRequest';
import { ResponseApiKeyInfoResponse } from '../model/responseApiKeyInfoResponse';
import { ResponseCheckModelIsServingResponse } from '../model/responseCheckModelIsServingResponse';
import { ResponseEstimateCostResponse } from '../model/responseEstimateCostResponse';
import { ResponseGetListPlatformSupportResponse } from '../model/responseGetListPlatformSupportResponse';
import { ResponseGetTaskStatisticsResponse } from '../model/responseGetTaskStatisticsResponse';
import { Authentication, Interceptor } from '../model/models';
import { ApiKeyAuth } from '../model/models';
export declare enum ApiKeyModelApiApiKeys {
    BearerAuth = 0
}
export declare class ApiKeyModelApi {
    protected _basePath: string;
    protected _defaultHeaders: any;
    protected _useQuerystring: boolean;
    protected authentications: {
        default: Authentication;
        BearerAuth: ApiKeyAuth;
    };
    protected interceptors: Interceptor[];
    constructor(basePath?: string);
    set useQuerystring(value: boolean);
    set basePath(basePath: string);
    set defaultHeaders(defaultHeaders: any);
    get defaultHeaders(): any;
    get basePath(): string;
    setDefaultAuthentication(auth: Authentication): void;
    setApiKey(key: ApiKeyModelApiApiKeys, value: string): void;
    addInterceptor(interceptor: Interceptor): void;
    /**
     *
     * @summary Get Api Key Model Info
     * @param id Model\&#39;s id
     * @param xApiKey api-key
     */
    apiKeyModelIdInfoGet(id: string, xApiKey?: string, options?: {
        headers: {
            [name: string]: string;
        };
    }): Promise<{
        response: http.IncomingMessage;
        body: ResponseApiKeyInfoResponse;
    }>;
    /**
     *
     * @summary Check Model Is Serving
     * @param id Model\&#39;s id
     * @param xApiKey api-key
     */
    apiKeyModelIdServingGet(id: string, xApiKey?: string, options?: {
        headers: {
            [name: string]: string;
        };
    }): Promise<{
        response: http.IncomingMessage;
        body: ResponseCheckModelIsServingResponse;
    }>;
    /**
     *
     * @summary Get Model Statistics
     * @param id Model\&#39;s id
     * @param input Get Api Key Statistics By Model Id Request
     * @param xApiKey api-key
     */
    apiKeyModelIdStatisticsPost(id: string, input: RequestGetApiKeyStatisticsByModelIdRequest, xApiKey?: string, options?: {
        headers: {
            [name: string]: string;
        };
    }): Promise<{
        response: http.IncomingMessage;
        body: ResponseGetTaskStatisticsResponse;
    }>;
    /**
     *
     * @summary Get cost to compute task by model api key
     * @param id Model\&#39;s id
     * @param xApiKey api-key
     */
    apiKeyModelIdTaskCostGet(id: string, xApiKey?: string, options?: {
        headers: {
            [name: string]: string;
        };
    }): Promise<{
        response: http.IncomingMessage;
        body: ResponseEstimateCostResponse;
    }>;
    /**
     *
     * @summary Get List Platforms Support By Api Key
     * @param xApiKey api-key
     */
    apiKeyModelVerifySupportPlatformsGet(xApiKey?: string, options?: {
        headers: {
            [name: string]: string;
        };
    }): Promise<{
        response: http.IncomingMessage;
        body: ResponseGetListPlatformSupportResponse;
    }>;
}
