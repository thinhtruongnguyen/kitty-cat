/**
 * AIOZ-AI-PLATFORM API
 * API for AIOZ AI Platform
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@swagger.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import http from 'http';
import { ResponseGetCommitHistoryResponse } from '../model/responseGetCommitHistoryResponse';
import { Authentication, Interceptor } from '../model/models';
import { ApiKeyAuth } from '../model/models';
export declare enum ApiKeyRepositoryApiApiKeys {
    BearerAuth = 0
}
export declare class ApiKeyRepositoryApi {
    protected _basePath: string;
    protected _defaultHeaders: any;
    protected _useQuerystring: boolean;
    protected authentications: {
        default: Authentication;
        BearerAuth: ApiKeyAuth;
    };
    protected interceptors: Interceptor[];
    constructor(basePath?: string);
    set useQuerystring(value: boolean);
    set basePath(basePath: string);
    set defaultHeaders(defaultHeaders: any);
    get defaultHeaders(): any;
    get basePath(): string;
    setDefaultAuthentication(auth: Authentication): void;
    setApiKey(key: ApiKeyRepositoryApiApiKeys, value: string): void;
    addInterceptor(interceptor: Interceptor): void;
    /**
     *
     * @summary Get commit history by repository name and branch name by api key
     * @param ownerUsername repository\&#39;s owner
     * @param repositoryName repository\&#39;s name
     * @param sha Sha is the sha of the commit (optional)
     * @param xApiKey api-key
     * @param page Page is the page number (default: 1) (optional)
     * @param pageSize PageSize is the page size (default: 10) (optional)
     * @param path Path is the path of the file (optional)
     * @param repoType
     */
    apiKeyRepositoryOwnerUsernameRepositoryNameCommitHistoryGet(ownerUsername: string, repositoryName: string, sha: string, xApiKey?: string, page?: number, pageSize?: number, path?: string, repoType?: string, options?: {
        headers: {
            [name: string]: string;
        };
    }): Promise<{
        response: http.IncomingMessage;
        body: ResponseGetCommitHistoryResponse;
    }>;
}
